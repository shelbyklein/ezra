name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: |
        npm run test:frontend -- --watchAll=false
        cd backend && npm run db:migrate:test && npm test -- --watchAll=false
      env:
        NODE_ENV: test
        JWT_SECRET: test-secret-key
        DATABASE_URL: data/test.db
      
    - name: Build application
      run: |
        npm run build:frontend
        npm run build:backend
      env:
        VITE_API_URL: ${{ secrets.PRODUCTION_API_URL }}
        NODE_ENV: production
    
    # Add your deployment steps here based on your hosting provider
    # Examples below for common providers:
    
    # For Vercel (Frontend)
    # - name: Deploy Frontend to Vercel
    #   uses: amondnet/vercel-action@v20
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
    #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
    #     working-directory: ./frontend
    
    # For Railway/Render (Backend)
    # - name: Deploy Backend
    #   run: |
    #     # Add deployment commands for your backend provider
    
    # For AWS
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1
    
    # - name: Deploy to AWS
    #   run: |
    #     # Add AWS deployment commands (S3, ECS, etc.)
    
    - name: Notify deployment
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: 'Deployment to production ${{ job.status }}'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}